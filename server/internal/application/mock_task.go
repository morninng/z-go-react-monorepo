// Code generated by MockGen. DO NOT EDIT.
// Source: ./task.go

// Package mock_application is a generated GoMock package.
package application

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/morninng/z-go-react-monorepo/internal/domain/entity"
)

// MockTaskApplicationService is a mock of TaskApplicationService interface.
type MockTaskApplicationService struct {
	ctrl     *gomock.Controller
	recorder *MockTaskApplicationServiceMockRecorder
}

// MockTaskApplicationServiceMockRecorder is the mock recorder for MockTaskApplicationService.
type MockTaskApplicationServiceMockRecorder struct {
	mock *MockTaskApplicationService
}

// NewMockTaskApplicationService creates a new mock instance.
func NewMockTaskApplicationService(ctrl *gomock.Controller) *MockTaskApplicationService {
	mock := &MockTaskApplicationService{ctrl: ctrl}
	mock.recorder = &MockTaskApplicationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskApplicationService) EXPECT() *MockTaskApplicationServiceMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockTaskApplicationService) GetAll(c context.Context) (*entity.Tasks, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", c)
	ret0, _ := ret[0].(*entity.Tasks)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockTaskApplicationServiceMockRecorder) GetAll(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockTaskApplicationService)(nil).GetAll), c)
}

// PostMany mocks base method.
func (m *MockTaskApplicationService) PostMany(c context.Context, cmd TaskSaveCommand) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostMany", c, cmd)
	ret0, _ := ret[0].(error)
	return ret0
}

// PostMany indicates an expected call of PostMany.
func (mr *MockTaskApplicationServiceMockRecorder) PostMany(c, cmd interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostMany", reflect.TypeOf((*MockTaskApplicationService)(nil).PostMany), c, cmd)
}
